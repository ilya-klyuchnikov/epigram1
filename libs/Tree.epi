------------------------------------------------------------------------------
include Nat
------------------------------------------------------------------------------
                         (    n : Nat    !    (   l, r : Tree   !
data (----------!  where !---------------! ;  !-----------------!
     ! Tree : * )        ! leaf n : Tree )    ! node l r : Tree )
------------------------------------------------------------------------------
     (    t : Tree     !                                
let  !-----------------!                                
     ! mirror t : Tree )                                
                                                        
     mirror t <= rec t                                  
     { mirror x <= case x                               
       { mirror (leaf n) => leaf n                      
         mirror (node l r) => node (mirror r) (mirror l)
       }                                                
     }                                                  
------------------------------------------------------------------------------
