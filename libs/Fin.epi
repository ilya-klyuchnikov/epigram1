------------------------------------------------------------------------------
include Nat
------------------------------------------------------------------------------
     (  n : Nat  !                                (     i : Fin n      !
data !-----------!  where (------------------! ;  !--------------------!
     ! Fin n : * )        ! fz : Fin (suc n) )    ! fs i : Fin (suc n) )
------------------------------------------------------------------------------
     (  i : Fin n  !              
let  !-------------!              
     ! fog i : Nat )              
                                  
     fog i <= rec i               
     { fog x <= case x            
       { fog fz => zero           
         fog (fs i) => suc (fog i)
       }                          
     }                            
------------------------------------------------------------------------------
