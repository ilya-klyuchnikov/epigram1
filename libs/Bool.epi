------------------------------------------------------------------------------
include Nat
------------------------------------------------------------------------------
data (----------!  where (-------------! ;  (--------------!
     ! Bool : * )        ! true : Bool )    ! false : Bool )
------------------------------------------------------------------------------
     (   b : Bool   !   
let  !--------------!   
     ! not b : Bool )   
                        
     not b <= case b    
     { not true => false
       not false => true
     }                  
------------------------------------------------------------------------------
     (     n : Nat     !      
let  !-----------------!      
     ! isZero n : Bool )      
                              
     isZero n <= case n       
     { isZero zero => true    
       isZero (suc n) => false
     }                        
------------------------------------------------------------------------------
